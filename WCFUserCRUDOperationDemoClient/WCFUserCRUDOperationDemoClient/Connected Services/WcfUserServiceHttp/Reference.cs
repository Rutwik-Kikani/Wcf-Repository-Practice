//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFUserCRUDOperationDemoClient.WcfUserServiceHttp {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDetails", Namespace="http://schemas.datacontract.org/2004/07/WcfUserService")]
    [System.SerializableAttribute()]
    public partial class UserDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WcfUserServiceHttp.IWcfUserService")]
    public interface IWcfUserService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfUserService/GetData", ReplyAction="http://tempuri.org/IWcfUserService/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfUserService/GetData", ReplyAction="http://tempuri.org/IWcfUserService/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfUserService/InsertUserDetails", ReplyAction="http://tempuri.org/IWcfUserService/InsertUserDetailsResponse")]
        string InsertUserDetails(WCFUserCRUDOperationDemoClient.WcfUserServiceHttp.UserDetails userInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfUserService/InsertUserDetails", ReplyAction="http://tempuri.org/IWcfUserService/InsertUserDetailsResponse")]
        System.Threading.Tasks.Task<string> InsertUserDetailsAsync(WCFUserCRUDOperationDemoClient.WcfUserServiceHttp.UserDetails userInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfUserService/SelectUserDetails", ReplyAction="http://tempuri.org/IWcfUserService/SelectUserDetailsResponse")]
        System.Data.DataSet SelectUserDetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfUserService/SelectUserDetails", ReplyAction="http://tempuri.org/IWcfUserService/SelectUserDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> SelectUserDetailsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfUserService/DeleteUserDetails", ReplyAction="http://tempuri.org/IWcfUserService/DeleteUserDetailsResponse")]
        bool DeleteUserDetails(WCFUserCRUDOperationDemoClient.WcfUserServiceHttp.UserDetails userInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfUserService/DeleteUserDetails", ReplyAction="http://tempuri.org/IWcfUserService/DeleteUserDetailsResponse")]
        System.Threading.Tasks.Task<bool> DeleteUserDetailsAsync(WCFUserCRUDOperationDemoClient.WcfUserServiceHttp.UserDetails userInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfUserService/GetUserDetails", ReplyAction="http://tempuri.org/IWcfUserService/GetUserDetailsResponse")]
        System.Data.DataSet GetUserDetails(WCFUserCRUDOperationDemoClient.WcfUserServiceHttp.UserDetails userInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfUserService/GetUserDetails", ReplyAction="http://tempuri.org/IWcfUserService/GetUserDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetUserDetailsAsync(WCFUserCRUDOperationDemoClient.WcfUserServiceHttp.UserDetails userInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfUserService/UpdateUserTable", ReplyAction="http://tempuri.org/IWcfUserService/UpdateUserTableResponse")]
        void UpdateUserTable(WCFUserCRUDOperationDemoClient.WcfUserServiceHttp.UserDetails userInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfUserService/UpdateUserTable", ReplyAction="http://tempuri.org/IWcfUserService/UpdateUserTableResponse")]
        System.Threading.Tasks.Task UpdateUserTableAsync(WCFUserCRUDOperationDemoClient.WcfUserServiceHttp.UserDetails userInfo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWcfUserServiceChannel : WCFUserCRUDOperationDemoClient.WcfUserServiceHttp.IWcfUserService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WcfUserServiceClient : System.ServiceModel.ClientBase<WCFUserCRUDOperationDemoClient.WcfUserServiceHttp.IWcfUserService>, WCFUserCRUDOperationDemoClient.WcfUserServiceHttp.IWcfUserService {
        
        public WcfUserServiceClient() {
        }
        
        public WcfUserServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WcfUserServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WcfUserServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WcfUserServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public string InsertUserDetails(WCFUserCRUDOperationDemoClient.WcfUserServiceHttp.UserDetails userInfo) {
            return base.Channel.InsertUserDetails(userInfo);
        }
        
        public System.Threading.Tasks.Task<string> InsertUserDetailsAsync(WCFUserCRUDOperationDemoClient.WcfUserServiceHttp.UserDetails userInfo) {
            return base.Channel.InsertUserDetailsAsync(userInfo);
        }
        
        public System.Data.DataSet SelectUserDetails() {
            return base.Channel.SelectUserDetails();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SelectUserDetailsAsync() {
            return base.Channel.SelectUserDetailsAsync();
        }
        
        public bool DeleteUserDetails(WCFUserCRUDOperationDemoClient.WcfUserServiceHttp.UserDetails userInfo) {
            return base.Channel.DeleteUserDetails(userInfo);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteUserDetailsAsync(WCFUserCRUDOperationDemoClient.WcfUserServiceHttp.UserDetails userInfo) {
            return base.Channel.DeleteUserDetailsAsync(userInfo);
        }
        
        public System.Data.DataSet GetUserDetails(WCFUserCRUDOperationDemoClient.WcfUserServiceHttp.UserDetails userInfo) {
            return base.Channel.GetUserDetails(userInfo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetUserDetailsAsync(WCFUserCRUDOperationDemoClient.WcfUserServiceHttp.UserDetails userInfo) {
            return base.Channel.GetUserDetailsAsync(userInfo);
        }
        
        public void UpdateUserTable(WCFUserCRUDOperationDemoClient.WcfUserServiceHttp.UserDetails userInfo) {
            base.Channel.UpdateUserTable(userInfo);
        }
        
        public System.Threading.Tasks.Task UpdateUserTableAsync(WCFUserCRUDOperationDemoClient.WcfUserServiceHttp.UserDetails userInfo) {
            return base.Channel.UpdateUserTableAsync(userInfo);
        }
    }
}
