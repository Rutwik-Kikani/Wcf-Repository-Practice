//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfFaultContractDemoClient.WCFHostDivideServcie {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WCFHostDivideServcie.IDivideService")]
    public interface IDivideService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDivideService/DivideTwoInteger", ReplyAction="http://tempuri.org/IDivideService/DivideTwoIntegerResponse")]
        int DivideTwoInteger(int n1, int n2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDivideService/DivideTwoInteger", ReplyAction="http://tempuri.org/IDivideService/DivideTwoIntegerResponse")]
        System.Threading.Tasks.Task<int> DivideTwoIntegerAsync(int n1, int n2);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDivideServiceChannel : WcfFaultContractDemoClient.WCFHostDivideServcie.IDivideService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DivideServiceClient : System.ServiceModel.ClientBase<WcfFaultContractDemoClient.WCFHostDivideServcie.IDivideService>, WcfFaultContractDemoClient.WCFHostDivideServcie.IDivideService {
        
        public DivideServiceClient() {
        }
        
        public DivideServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DivideServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DivideServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DivideServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int DivideTwoInteger(int n1, int n2) {
            return base.Channel.DivideTwoInteger(n1, n2);
        }
        
        public System.Threading.Tasks.Task<int> DivideTwoIntegerAsync(int n1, int n2) {
            return base.Channel.DivideTwoIntegerAsync(n1, n2);
        }
    }
}
