//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MessageContractDemoClient.EmployeeServiceHttp {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EmployeeServiceHttp.IEmployeeService")]
    public interface IEmployeeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/GetEmployee", ReplyAction="http://tempuri.org/IEmployeeService/GetEmployeeResponse")]
        MessageContractDemoClient.EmployeeServiceHttp.EmployeeInfo GetEmployee(MessageContractDemoClient.EmployeeServiceHttp.EmployeeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/GetEmployee", ReplyAction="http://tempuri.org/IEmployeeService/GetEmployeeResponse")]
        System.Threading.Tasks.Task<MessageContractDemoClient.EmployeeServiceHttp.EmployeeInfo> GetEmployeeAsync(MessageContractDemoClient.EmployeeServiceHttp.EmployeeRequest request);
        
        // CODEGEN: Generating message contract since the operation SaveEmployee is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/SaveEmployee", ReplyAction="http://tempuri.org/IEmployeeService/SaveEmployeeResponse")]
        MessageContractDemoClient.EmployeeServiceHttp.SaveEmployeeResponse SaveEmployee(MessageContractDemoClient.EmployeeServiceHttp.EmployeeInfo request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/SaveEmployee", ReplyAction="http://tempuri.org/IEmployeeService/SaveEmployeeResponse")]
        System.Threading.Tasks.Task<MessageContractDemoClient.EmployeeServiceHttp.SaveEmployeeResponse> SaveEmployeeAsync(MessageContractDemoClient.EmployeeServiceHttp.EmployeeInfo request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="EmployeeRequestObject", WrapperNamespace="http://EmployeeServiceLibrary.com/Employee", IsWrapped=true)]
    public partial class EmployeeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://EmployeeServiceLibrary.com/Employee", Order=0)]
        public int EmployeeId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://EmployeeServiceLibrary.com/Employee", Order=1)]
        public string LicenseKey;
        
        public EmployeeRequest() {
        }
        
        public EmployeeRequest(int EmployeeId, string LicenseKey) {
            this.EmployeeId = EmployeeId;
            this.LicenseKey = LicenseKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="EmployeeInfoObject", WrapperNamespace="http://EmployeeServiceLibrary.com/Employee", IsWrapped=true)]
    public partial class EmployeeInfo {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://EmployeeServiceLibrary.com/Employee", Order=0)]
        public int ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://EmployeeServiceLibrary.com/Employee", Order=1)]
        public string Name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://EmployeeServiceLibrary.com/Employee", Order=2)]
        public string Gender;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://EmployeeServiceLibrary.com/Employee", Order=3)]
        public System.DateTime DOB;
        
        public EmployeeInfo() {
        }
        
        public EmployeeInfo(int ID, string Name, string Gender, System.DateTime DOB) {
            this.ID = ID;
            this.Name = Name;
            this.Gender = Gender;
            this.DOB = DOB;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SaveEmployeeResponse {
        
        public SaveEmployeeResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmployeeServiceChannel : MessageContractDemoClient.EmployeeServiceHttp.IEmployeeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmployeeServiceClient : System.ServiceModel.ClientBase<MessageContractDemoClient.EmployeeServiceHttp.IEmployeeService>, MessageContractDemoClient.EmployeeServiceHttp.IEmployeeService {
        
        public EmployeeServiceClient() {
        }
        
        public EmployeeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmployeeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmployeeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmployeeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MessageContractDemoClient.EmployeeServiceHttp.EmployeeInfo MessageContractDemoClient.EmployeeServiceHttp.IEmployeeService.GetEmployee(MessageContractDemoClient.EmployeeServiceHttp.EmployeeRequest request) {
            return base.Channel.GetEmployee(request);
        }
        
        public int GetEmployee(int EmployeeId, string LicenseKey, out string Name, out string Gender, out System.DateTime DOB) {
            MessageContractDemoClient.EmployeeServiceHttp.EmployeeRequest inValue = new MessageContractDemoClient.EmployeeServiceHttp.EmployeeRequest();
            inValue.EmployeeId = EmployeeId;
            inValue.LicenseKey = LicenseKey;
            MessageContractDemoClient.EmployeeServiceHttp.EmployeeInfo retVal = ((MessageContractDemoClient.EmployeeServiceHttp.IEmployeeService)(this)).GetEmployee(inValue);
            Name = retVal.Name;
            Gender = retVal.Gender;
            DOB = retVal.DOB;
            return retVal.ID;
        }
        
        public System.Threading.Tasks.Task<MessageContractDemoClient.EmployeeServiceHttp.EmployeeInfo> GetEmployeeAsync(MessageContractDemoClient.EmployeeServiceHttp.EmployeeRequest request) {
            return base.Channel.GetEmployeeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MessageContractDemoClient.EmployeeServiceHttp.SaveEmployeeResponse MessageContractDemoClient.EmployeeServiceHttp.IEmployeeService.SaveEmployee(MessageContractDemoClient.EmployeeServiceHttp.EmployeeInfo request) {
            return base.Channel.SaveEmployee(request);
        }
        
        public void SaveEmployee(int ID, string Name, string Gender, System.DateTime DOB) {
            MessageContractDemoClient.EmployeeServiceHttp.EmployeeInfo inValue = new MessageContractDemoClient.EmployeeServiceHttp.EmployeeInfo();
            inValue.ID = ID;
            inValue.Name = Name;
            inValue.Gender = Gender;
            inValue.DOB = DOB;
            MessageContractDemoClient.EmployeeServiceHttp.SaveEmployeeResponse retVal = ((MessageContractDemoClient.EmployeeServiceHttp.IEmployeeService)(this)).SaveEmployee(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MessageContractDemoClient.EmployeeServiceHttp.SaveEmployeeResponse> MessageContractDemoClient.EmployeeServiceHttp.IEmployeeService.SaveEmployeeAsync(MessageContractDemoClient.EmployeeServiceHttp.EmployeeInfo request) {
            return base.Channel.SaveEmployeeAsync(request);
        }
        
        public System.Threading.Tasks.Task<MessageContractDemoClient.EmployeeServiceHttp.SaveEmployeeResponse> SaveEmployeeAsync(int ID, string Name, string Gender, System.DateTime DOB) {
            MessageContractDemoClient.EmployeeServiceHttp.EmployeeInfo inValue = new MessageContractDemoClient.EmployeeServiceHttp.EmployeeInfo();
            inValue.ID = ID;
            inValue.Name = Name;
            inValue.Gender = Gender;
            inValue.DOB = DOB;
            return ((MessageContractDemoClient.EmployeeServiceHttp.IEmployeeService)(this)).SaveEmployeeAsync(inValue);
        }
    }
}
